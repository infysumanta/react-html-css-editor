{"version":3,"sources":["components/Header.js","components/Editor.js","components/Preview.js","components/App.js","index.js"],"names":["Header","className","Editor","this","props","displayLabel","language","value","onBeforeChange","_editor","_data","handleChange","options","lineWrapping","lint","mode","lineNumbers","React","Component","Preview","showPreview","preview","current","html","css","document","contentWindow","style","createElement","innerText","head","append","body","innerHTML","createRef","prevProps","xml","onClick","text","title","ref","id","width","height","App","state","setState","marginRight","ReactDOM","render","StrictMode","getElementById"],"mappings":"uPAWeA,MAXf,WACE,OACE,iCACE,sBAAKC,UAAU,iBAAf,UACE,6CACA,8E,QC+BOC,G,+LA5BH,IAAD,OACP,OACE,sBAAKD,UAAWE,KAAKC,MAAMH,UAAY,UAAvC,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBACf,mBAAGA,UAAU,WAAb,SACGE,KAAKC,MAAMC,cAAgBF,KAAKC,MAAME,cAG3C,qBAAKL,UAAU,cAAf,SACE,cAAC,aAAD,CACEM,MAAOJ,KAAKC,MAAMG,MAClBC,eAAgB,SAACC,EAASC,EAAOH,GAAjB,OACd,EAAKH,MAAMO,aAAaJ,EAAO,EAAKH,MAAME,WAE5CM,QAAS,CACPC,cAAc,EACdC,MAAM,EACNC,KAAMZ,KAAKC,MAAME,SACjBU,aAAa,c,GApBNC,IAAMC,YCwCZC,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAYFC,YAAc,WACZ,GAAI,EAAKC,QAAQC,QAAS,CAAC,IAAD,EACJ,EAAKlB,MAAnBmB,EADkB,EAClBA,KAAMC,EADY,EACZA,IACRC,EAAW,EAAKJ,QAAQC,QAAQI,cAAcD,SAC9CE,EAAQF,EAASG,cAAc,SACnCD,EAAME,UAAYL,EAClBC,EAASK,KAAKC,OAAOJ,GACrBF,EAASO,KAAKC,UAAYV,IAlB5B,EAAKF,QAAUJ,IAAMiB,YAFT,E,gEAKZ/B,KAAKiB,gB,yCAEYe,GACbA,EAAUX,MAAQrB,KAAKC,MAAMoB,KAAOW,EAAUC,MAAQjC,KAAKC,MAAMgC,KACnEjC,KAAKiB,gB,+BAeP,OACE,sBAAKnB,UAAU,SAAf,UACE,sBAAKA,UAAU,+BAAf,UACE,qBAAKA,UAAU,mBACf,mBAAGA,UAAU,WAAWoC,QAASlC,KAAKiB,YAAtC,SACGjB,KAAKC,MAAMkC,UAGhB,wBACEC,MAAM,mBACNC,IAAKrC,KAAKkB,QACVoB,GAAG,cACHC,MAAM,OACNC,OAAO,gB,GAtCK1B,IAAMC,WCwCb0B,E,4MApCbC,MAAQ,CACNtB,KAAM,wFACNC,IAAK,4N,EAGPb,aAAe,SAACJ,EAAOD,GACrB,EAAKwC,SAAL,eAAiBxC,EAAWC,K,uDAGpB,IAAD,EACaJ,KAAK0C,MAAnBtB,EADC,EACDA,KAAMC,EADL,EACKA,IACZ,OACE,sBAAKvB,UAAU,OAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACE,sBAAK0B,MAAO,CAAEoB,YAAa,QAA3B,UACE,cAAC,EAAD,CACEzC,SAAS,MACTC,MAAOgB,EACPlB,aAAa,OACbM,aAAcR,KAAKQ,eAErB,cAAC,EAAD,CACEL,SAAS,MACTL,UAAU,QACVM,MAAOiB,EACPb,aAAcR,KAAKQ,kBAGvB,cAAC,EAAD,CAAS2B,KAAK,SAASf,KAAMA,EAAMC,IAAKA,c,GA9BhCP,IAAMC,WCAxB8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAAS0B,eAAe,W","file":"static/js/main.c3226ef8.chunk.js","sourcesContent":["function Header() {\r\n  return (\r\n    <header>\r\n      <div className=\"header-content\">\r\n        <h1>Code Editor</h1>\r\n        <p>You can write and preview HTML and CSS!</p>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/css/css\";\r\nimport \"codemirror/addon/edit/closetag\";\r\n\r\nclass Editor extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.className + \" window\"}>\r\n        <div className=\"window-header\">\r\n          <div className=\"action-buttons\"></div>\r\n          <p className=\"language\">\r\n            {this.props.displayLabel || this.props.language}\r\n          </p>\r\n        </div>\r\n        <div className=\"window-body\">\r\n          <CodeMirror\r\n            value={this.props.value}\r\n            onBeforeChange={(_editor, _data, value) =>\r\n              this.props.handleChange(value, this.props.language)\r\n            }\r\n            options={{\r\n              lineWrapping: true,\r\n              lint: true,\r\n              mode: this.props.language,\r\n              lineNumbers: true,\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nclass Preview extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.preview = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    this.showPreview();\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.css !== this.props.css || prevProps.xml !== this.props.xml) {\r\n      this.showPreview();\r\n    }\r\n  }\r\n\r\n  showPreview = () => {\r\n    if (this.preview.current) {\r\n      let { html, css } = this.props;\r\n      let document = this.preview.current.contentWindow.document;\r\n      let style = document.createElement(\"style\");\r\n      style.innerText = css;\r\n      document.head.append(style);\r\n      document.body.innerHTML = html;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"window\">\r\n        <div className=\"window-header preview-header\">\r\n          <div className=\"action-buttons\"></div>\r\n          <p className=\"language\" onClick={this.showPreview}>\r\n            {this.props.text}\r\n          </p>\r\n        </div>\r\n        <iframe\r\n          title=\"HTML/CSS Preview\"\r\n          ref={this.preview}\r\n          id=\"code_result\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n        ></iframe>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Preview;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Editor from \"./Editor\";\r\nimport Preview from \"./Preview\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    html: '<center>\\n  <img src=\"https://cutt.ly/JbMvJKT\" />\\n  <h1>Hello World!</h1>\\n</center>',\r\n    css: \"h1 {\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\\n}\\nimg {\\n  width: 200px;\\n  height: auto;\\n  border-radius: 20px;\\n}\",\r\n  };\r\n\r\n  handleChange = (value, language) => {\r\n    this.setState({ [language]: value });\r\n  };\r\n\r\n  render() {\r\n    let { html, css } = this.state;\r\n    return (\r\n      <div className=\"view\">\r\n        <Header />\r\n        <div className=\"wrapper\">\r\n          <div style={{ marginRight: \"1rem\" }}>\r\n            <Editor\r\n              language=\"xml\"\r\n              value={html}\r\n              displayLabel=\"html\"\r\n              handleChange={this.handleChange}\r\n            />\r\n            <Editor\r\n              language=\"css\"\r\n              className=\"m-top\"\r\n              value={css}\r\n              handleChange={this.handleChange}\r\n            />\r\n          </div>\r\n          <Preview text=\"OUTPUT\" html={html} css={css} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./style/app.css\";\r\nimport App from \"./components/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}